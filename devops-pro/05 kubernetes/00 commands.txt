sudo snap install multipass
multipass
multipass launch -n k8s -c 2 -m 2gb -d 20gb
multipass list
multipass shell k8s
multipass exec k8s -- cat teste.txt
multipass info k8s
multipass delete k8s
multipass recover k8s
multipass start k8s
multipass purge
multipass launch -n k8s -c 2 -m 4G -d 20G
multipass exec k8s -- sudo snap install microk8s --classic --channel=1.18/stable
multipass exec k8s -- sudo usermod -a -G microk8s ubuntu
multipass exec k8s -- sudo chown -f -R ubuntu ~/.kube
multipass restart k8s
multipass exec k8s -- /snap/bin/microk8s.kubectl create deployment nginx --image=nginx
multipass exec k8s -- /snap/bin/microk8s.kubectl get pods
multipass exec k8s -- /snap/bin/microk8s.kubectl config view --raw
kubectl get pods
kubectl get nodes
kubectl get all
multipass launch -n k8s -c 2 -m 2G -d 20G
multipass launch -n k8s2 -c 2 -m 2G -d 20G
history | grep 1..18
history | grep 1.18
multipass exec k8s2 -- sudo snap install microk8s --classic --channel=1.18/stable
history | grep usermod
multipass exec k8s2 -- sudo usermod -a -G microk8s ubuntu
history | grep .kube
multipass exec k8s2 -- sudo chown -f -R ubuntu ~/.kube
multipass restart k8s2
multipass shell k8s2
# For AMD64 / x86_64\n[ $(uname -m) = x86_64 ] && curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64\n# For ARM64\n[ $(uname -m) = aarch64 ] && curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-arm64\nchmod +x ./kind\nsudo mv ./kind /usr/local/bin/kind
kind
kind create cluster
multipass delete k8s2
kubectl create deployment nginx --image==nginx
kubectl create deployment nginx --image=nginx
kubectl port-forward pod/nginx-77b4fdf86c-p98md 8080:80
kind create cluster --name meucluster
kind get clusters
kind delete cluster
kind delete cluster --name meucluster
kind create cluster --config ./cluster-one-control-plane.yaml --name multinodes
kubectl delete multinodes
kind delete multinodes
kind delete cluster multinodes
history | grep delete
kind delete cluster --name multinodes
curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
az login
kubectl api-resources
kind create cluster --config ./01\ cluster-one-control-plane.yaml --name multinodes
kubectl apply -f meuprimeiropod.yaml
kubectl describe pod meuprimeiropod
kubectl port-forward pod/meuprimeiropod 8080:80
kubectl apply -f 03\ meupodazul.yaml -f 04\ meupodverde.yaml
kubectl delete pod/meuprimeiropod
kubectl get pods -l versao=verde
kubectl get pods -l app=nginx
kubectl get pods -l app=naginx
kubectl delete pod -l versao=azul
kubectl apply -f 05\ meuprimeiroreplicaset.yaml
watch 'kubectl get all'
kubectl port-forward pod/meuprimeiroreplicaset-n428g 8080:80
kubectl delete pod/meuprimeiroreplicaset-n428g
kubectl scale replicaset meureplicaset --replicas=15
kubectl scale replicaset meuprimeiroreplicaset --replicas=15
kubectl scale replicaset meuprimeiroreplicaset --replicas=2
kubectl apply -f 06\ meuprimeirodeployment.yaml
kubectl delete replicaset.apps/meuprimeiroreplicaset
kubectl delete pod/meupodverde
kubectl port-forward pod/meuprimeirodeployment-78f7d4f856-ptcs8 8080:80
kubectl get pods -o wide
kubectl scale deployment.apps/meuprimeirodeployment --replicas=10
kubectl port-forward pod/meuprimeirodeployment-6b9c9d9cff-5hqm9 8080:80
kubectl rollout history deplyment meuprimeirodeployment
kubectl rollout history deployment meuprimeirodeployment
kubectl rollout undo deployment meuprimeirodeployment
kubectl port-forward pod/meuprimeirodeployment-78f7d4f856-47x8x 8080:80
cd 07\ service
kubectl delete deployment.apps/meuprimeirodeployment
kubectl apply -f deployment.yaml
kubectl run -i --tty --image kubedevio/ubuntu-curl ping-test --restart=Never --rm -- /bin/bash
kubectl apply -f service.yaml
docker container run --rm kubedevio/ubuntu-curl curl http://10.96.43.161:30222/temperatura/fahrenheitparacelsius/200
curl http://10.96.43.161:30222/temperatura/fahrenheitparacelsius/200
doctl compute droplet list\n
curl http://10.116.0.0:31205/temperatura/fahrenheitparacelsius/200
curl http://10.116.0.0/20:31205/temperatura/fahrenheitparacelsius/200
kubectl get nodes -o wide\n
curl http://157.230.54.191:31205/temperatura/fahrenheitparacelsius/200
kubectl apply -f service\ 3\ loadbalancer.yaml
curl http://146.190.186.105/temperatura/fahrenheitparacelsius/200
cd ..
ls
kind start cluster multinodes
kubectl get endpoints
kubectl get namespace
kubectl delete deployment.apps/api
kubectl delete service/api-service
cd 08\ namespace
kubectl apply -f deployblue.yaml -f deploygreen.yaml
kubectl create namespace blue
kubectl create namespace green
kubectl delete -f .
kubectl apply -f deployblue.yaml -n blue
kubectl get deploy -n blue
kubectl get deploy --all-namespaces
watch 'kubectl get all --all-namespaces'
kubectl apply -f service.yaml -n blue
kubectl apply -f service.yaml -n green
kubectl get services --all-namespace
kubectl get services --all-namespaces
kubectl apply -f deploygreen.yaml -n green
kubectl get pods -o wide --all-namespaces
kubectl api-resources --namespaced=true
kubectl api-resources --namespaced=false
cd ../09\ deploy\ app
git clone https://github.com/KubeDev/pedelogo-catalogo.git
rm -rf pedelogo-catalogo/.git
cd pedelogo-catalogo
cd src
ls ..
cd PedeLogo.Catalogo.Api
docker build -f auctus/pedelogo-catalogo:v1.0.0 .
docker build -f auctus/pedelogo-catalogo:v1.0.0 ./pedelogo-catalogo/src/PedeLogo.Catalogo.Api/Dockerfile ./pedelogo-catalogo
docker build -t auctus/pedelogo-catalogo:v1.0.0 -f ./pedelogo-catalogo/src/PedeLogo.Catalogo.Api/Dockerfile ./pedelogo-catalogo
docker login
docker push auctus/pedelogo-catalogo:v1.0.0
kubectl get all --all-namespaces
kubectl delete deployment.apps/deploy-nginx-color deployment.apps/deploy-nginx-color
kubectl delete deploy deployment.apps/deploy-nginx-color deployment.apps/deploy-nginx-color
kubectl delete deploy deployment.apps/deploy-nginx-color
kubectl delete deploy deployment.apps/deploy-nginx-color --namespace=blue
kubectl delete deploy deployment.apps/deploy-nginx-color -namespace=blue
kubectl delete deploy deployment.apps/deploy-nginx-color --namespace=green
kubectl delete deploy deployment.apps/deploy-nginx-color --namespace green
kubectl delete deploy deployment.apps/deploy-nginx-color --namespace blue
kubectl delete deployment deployment.apps/deploy-nginx-color --namespace blue
kubectl delete deployment deploy-nginx-color --namespace blue
kubectl delete deployment deploy-nginx-color --namespace green
kubectl apply -f pedelogo-catalogo/k8s/deployment.yaml
kubectl apply -f pedelogo-catalogo/k8s/service.yaml
kubectl apply -f pedelogo-catalogo/k8s/api/deployment.yaml
kubectl apply -f pedelogo-catalogo/k8s/api/service.yaml
kubectl apply -f pedelogo-catalogo/k8s/mongodb/mongodb-configmap.yaml
kubectl get configmap
kubectl describe configmap mongodb-configmap
kubectl apply -f pedelogo-catalogo/k8s/mongodb/
kubectl apply -f pedelogo-catalogo/k8s/api
kubectl apply -f pedelogo-catalogo/k8s/api/api-configmap.yaml
echo -n "mongouser" | base64
echo -n "mongopwd" | base64
kubectl apply -f pedelogo-catalogo/k8s/mongodb/mongodb-secret.yaml
kubectl get secrets
kubectl delete configmap mongodb-confimap
kubectl delete configmap mongodb-configmap
kubectl apply -f pedelogo-catalogo/k8s/mongodb/deployment.yaml
kubectl create configmap literal-configmap --from-literal=Mongo__Host=mongo-service
kubectl create secret generic literal-secret --from-literal=MONGO_PWD=mongopwd
cd k8s
kubectl apply -f ./ -R
kubectl apply -f api/deployment.yaml
kubectl describe pods pod/api-deployment-76b69b8845-bs2kz
kubectl describe pod pod/api-deployment-76b69b8845-bs2kz
kubectl describe pod/api-deployment-76b69b8845-bs2kz
cd 10\ resource\ request\ e\ resource\ limits
kubectl apply -f deployment-resource.yaml
kubectl describe pod/resource-container-5ff4c64c4b-5s9lk
kubectl top pod/resource-container-665b9d9bd4-s886f
kubectl top pod pod/resource-container-665b9d9bd4-s886f
kubectl top pod resource-container-665b9d9bd4-s886f
kubectl top nodes
kubectl top -h
kubectl top pod
kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
k -n kube-system get pods
kubectl -n kube-system get pods
kubectl -n kube-system edit deploy metrics-server
kubectl top node
kubectl top pods
kubectl top pods --containers
curl --data "megabytes=20&durationSec=30" http://146.190.185.107/consumeMem
curl --data "megabytes=20&durationSec=30" http://146.190.185.107/ConsumeMem
curl --data "millicores=130&durationSec=30" http://146.190.185.107/ConsumeCPU
curl --data "megabytes=80&durationSec=30" http://146.190.185.107/ConsumeMem
watch 'kubectl top pods'
curl --data "megabytes=64&durationSec=30" http://146.190.185.107/ConsumeMem
curl --data "megabytes=59&durationSec=30" http://146.190.185.107/ConsumeMem
curl --data "megabytes=50&durationSec=30" http://146.190.185.107/ConsumeMem
kubectl apply -f hpa.yaml
kubectl get hpa
curl --data "millicores=130&durationSec=120" http://146.190.185.107/ConsumeCPU
cd 09\ deploy\ app
kubectl apply -f pedelogo-catalogo/k8s/.
kubectl apply -f pedelogo-catalogo/k8s/
kubectl apply -f pedelogo-catalogo/k8s/mongodb
cd ../11\ limit\ range
kubectl delete deployments --all\n
kubectl delete replicasets --all\n
kubect delete -f ./deployment.yaml
kubectl delete -f ./deployment.yaml
kubectl apply -f limitrange.yaml
kubectl describe pod/nginx-55f598f8d-lhmhx
cd ../
cd 12\ resource\ quota
kubectl apply -f resourcequota.yaml
kubectl delete -f ./resourcequota.yaml
kubectl delete horizontalpodautoscaler.autoscaling/hpa-deploy
kubectl describe replicaset.apps/nginx-5f877b88
kubectl apply -f resourcequota-obj.yaml
kubectl delete deployments
10898!
cd ../13\ ciclo\ vida\ pod
cd ../09\ deploy\ app/pedelogo-catalogo/k8s
kubectl apply -f api/
kubectl logs pod/api-deployment-69db8599bd-vhrms
kubectl logs pod/api-deployment-69db8599bd-vhrms -c init-pod
kubectl apply -f mongodb
kubectl logs pod/mongodb-deployment-5dd7b5676c-svwcs
kubectl logs deployment.apps/mongodb-deployment
kubectl logs replicaset.apps/mongodb-deployment-5dd7b5676c
kubectl describe rs replicaset.apps/mongodb-deployment-5dd7b5676c
kubectl describe rs mongodb-deployment-5dd7b5676c
kubectl delete deployment.apps/mongodb-deployment
kubectl apply -f mongodb/
kubectl describe deploy deployment.apps/mongodb-deployment
kubectl describe deploy mongodb-deployment
kubectl describe rs mongodb-deployment-6fc964c547
kubectl logs pod mongodb-deployment-6fc964c547-mf55f
kubectl logs pod/mongodb-deployment-6fc964c547-mf55f
apiVersion: apps/v1\nkind: Deployment\nmetadata:\n name: mongodb-deployment\nspec:\n selector:\n matchLabels:\n app: mongodb\n template:\n metadata:\n labels:\n app: mongodb\n spec:\n containers:\n - name: mongodb-container\n image: mongo:4.2.8\n ports:\n - containerPort: 27017\n resources:\n requests:\n memory: 256Mi\n cpu: 1000m\n limits:\n memory: 256Mi\n cpu: 1000m \n envFrom:\n - secretRef:\n name: mongodb-secret\n
kubectl describe nodes
kubectl apply -f mongodb/mongodb-pv.yaml
kubectl get pv
kubectl apply -f mongodb/mongodb-pvc.yaml
kubectl get pvc
kubectl apply -f mongodb/deployment.yaml
kubectl delete pod/mongodb-deployment-5895d468f6-r8xzc
kubectl get storageclass
kubectl apply -f mongodb/mongodb-pvc-scw.yaml
kubectl delete pod/mongodb-deployment-bbc6cc8ff-9m7p5
history | grep 'kubectl delete deployment '
kubectl delete deployment.apps/api-deployment
cd ../../../14\ stateful
kubectl apply -f nginx.yaml
kubectl describe nginx-state
kubectl describe stateful nginx-state
kubectl describe statefulset nginx-state
kubectl logs pod/nginx-state-0
kubectl delete statefulset.apps/nginx-state
kubectl delete service/nginx-state
cd ../15\ daemonset
kubectl apply -f prometheus-node.yaml
docker container run kubedevio/roleta -w 5 -c 2 -m 5
docker container run kubedevio/roleta:v1 -w 5 -c 2 -m 5
docker container run kubedevio/roleta:latest -w 5 -c 2 -m 5
docker container run kubedevio/roleta:latest -c 2 -m 5
cd ../16\ job
kubectl apply -f job.yaml
kubectl logs pod/roleta-job-9972j
kubectl logs pod/roleta-job-qrqfx
kubectl describe job roleta-job
kubectl delete job.batch/roleta-job
kubectl apply -f cronjob.yaml
kubectl delete cronjob.batch/roleta-job
watch 'kubectl get all'
kubectl apply -f ./k8s/mongodb
kubectl apply -f ./k8s/api
kubectl get pods -o wide
pool-tmebwg26l-f5zhu
kubectl get nodes
kubectl label node pool-tmebwg26l-f5zh8 database=mongodb
kubectl apply -f k8s/mongodb/deployment.yaml
kubectl label node pool-tmebwg26l-f5zh8 database-
ls
kubectl apply -f k8s/api/deployment.yaml
kubectl describe replicaset.apps/api-deployment-5748dc7687
kubectl describe pod/api-deployment-5748dc7687-qrp74
kubectl describe pod/api-deployment-75d8c6fff-8twkf
kubectl describe pod/api-deployment-6d47f9c6dd-zfkph
kubectl delete -f k8s/api/deployment.yaml
cd ../18\ security
kind cluster list
kind get clusters\n
kind delete cluster --name multinodes
kind create cluster --name cluster-wavenet --config 00-kind.yaml
kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
kind delete cluster --name cluster-wavenet
kubectl apply -f 01-nginx.yaml
kubectl describe deployment.apps/nginx
kubectl describe replicaset.apps/nginx-5d8974d7bd
kubectl describe pod/nginx-5d8974d7bd-mxfqw
kubectl deletedeployment.apps/api-deployment
kubectl delete deployment.apps/api-deployment
kubectl delete deployment.apps/mongodb-deployment
kubectl delete deployment.apps/nginx
kubectl describe pod/nginx-5d8974d7bd-64q9z
kubectl apply -f 01-nginx.yaml --force
kubectl run -i --tty --image kubedevio/ubuntu-curl ping-test --restart=Never --rm -- /bin/bash
kubectl apply -f 02-policy.yaml
kubectl describe networkpolicy nginx-policy
kubectl describe pod/nginx-6f46f64959-pg6zm
kubectl run -i --tty --image kubedevio/ubuntu-curl ping-test --restart=Never --rm -- curl http://nginx
kubectl run -i --tty -l --image kubedevio/ubuntu-curl ping-test --restart=Never --rm -- curl http://nginx
kubectl run -i --tty -l app=ubuntu --image kubedevio/ubuntu-curl ping-test --restart=Never --rm -- curl http://nginx
kubectl crate namespace curl
kubectl create namespace curl
kubectl run -i --tty -l app=ubuntu --image kubedevio/ubuntu-curl ping-test --restart=Never --rm -- curl http://nginx.default.svc.cluster.local
kubectl run -i --tty -n curl -l app=ubuntu --image kubedevio/ubuntu-curl ping-test --restart=Never --rm -- curl http://nginx.default.svc.cluster.local
kubectl apply -f 02-policy.yaml --force
kubectl label namespace curl ns=nginx
kubectl run -i --tty -n curl --image kubedevio/ubuntu-curl ping-test --restart=Never --rm -- curl http://nginx.default.svc.cluster.local
cd 03
cd ..
cd 03\ service\ account\ rbac
git clone https://github.com/KubeDev/k8s-dashboard-csharp.git
rm -rf k8s-dashboard-csharp/.git
cd k8s-dashboard-csharp
rm -rf .github
rm -rf .gitignore
kubectl apply -f k8s/deployment.yaml
kubectl apply -f k8s/service
kubectl apply -f k8s/service.yaml
kubectl describe deployment.apps/k8s-dashboard-deploy
kubectl describe replicaset.apps/k8s-dashboard-deploy-5c98c94675
kubectl get secrets
kubectl delete deployment.apps/k8s-dashboard-deploy
kubectl describe replicaset.apps/k8s-dashboard-deploy-fc6cd5bff
kubectl apply pod/k8s-dashboard-deploy-fc6cd5bff-xgt5c
kubectl describe pod/k8s-dashboard-deploy-fc6cd5bff-xgt5c
kubectl apply -f k8s/deployment.yaml --force
kubectl describe pod/k8s-dashboard-deploy-5544d9b486-ljc6c
kubectl delete deployment k8s-dashboard-deploy
kubectl apply -f k8s/serviceaccount.yaml
kubectl describe pod/k8s-dashboard-deploy-5c98c94675-pc6pg
kubectl apply -f k8s/cluster-role.yaml
kubectl get role
kubectl get clusterole
kubectl get clusterrole
kubectl get clusterrole | grep dash
kubectl apply -f k8s/cluster-role-binding.yaml
k3d cluster create
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.0/deploy/static/provider/baremetal/deploy.yaml
kubectl get all -n ingress-nginx
k3d cluster list
k3d cluster delete k3s-default
k3d cluster create -p "80:30000@loadbalancer"
sudo lsof -i :80
kill 1067
sudo kill 1067
sudo systemctl disable apache2\n
wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.0/deploy/static/provider/baremetal/deploy.yaml
kubectl apply -f deploy.yaml
kubectl apply -f ingress-nginx.yaml
mv ~/Downloads/deployment.yaml .
kubectl apply -f deployment.yaml
kubectl apply -f 02-ingress.yaml
kubectl get ingress
kubectl get ingressclass
kubectl delete -f 02-ingress.yaml
kubectl delete deployment.apps/k8s-dashboard-deploy
watch 'kubectl get all'
kubectl delete service --all -n default\n
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.0/deploy/static/provider/do/deploy.yaml
watch 'kubectl get all -n ingress-nginx'
kubectl get svc -n ingress-nginx
ping chiarellidev.com
ls
kubectl apply -f 01-deployment.yaml
curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg &gt; /dev/null\nsudo apt-get install apt-transport-https --yes\necho "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list\nsudo apt-get update\nsudo apt-get install helm
helm repo add stable https://chartshelm.sh/stable
helm repo add stable https://charts.helm.sh/stable
helm repo update
helm repo list
helm repo add jenkins https://charts.jenkins.io
helm repo remove jenkins
helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
helm search repo ingress
helm inspect all ingress-nginx/ingress-nginx
helm inspect values ingress-nginx/ingress-nginx
helm inspect values ingress-nginx/ingress-nginx &gt; values.yaml
cd ../20\ helm
cd ../19\ ingress\ controller
kubectl delete 01-deployment.yaml
kubectl delete if 01-deployment.yaml
kubectl delete -f 01-deployment.yaml
helm install meu-ingress-controller ingress-nginx/ingress-nginx
kubectl config get-contexts
kubectl cluster-info
history
kubectl get ingress --all
kubectl get ingress -all
kubectl get ingress all
kubectl delete ingressclass nginx
helm list
helm uninstall meu-ingress-controller
helmi list
kubectl create namespace nginx-ingress
helm install meu-ingress-controller ingress-nginx/ingress-nginx --namespace nginx-ingress
helm list -n nginx-ingress
watch 'kubectl get all -n nginx-ingress'
helm upgrade meu-ingress-controller ingress-nginx/ingress-nginx --namespace nginx-ingress --values v
helm upgrade meu-ingress-controller ingress-nginx/ingress-nginx --namespace nginx-ingress --values values.yaml
helm history meu-ingress-controller -n nginx-ingress
helm rollback meu-ingress-controller -n nginx-ingress
helm upgrade meu-ingress-controller ingress-nginx/ingress-nginx --namespace nginx-ingress --set controller.replicaCount=2
helm rollback meu-ingress-controller 2 -n nginx-ingress
mv ~/Downloads/aula-helm.zip .
unzip aula-helm.zip .
unzip -e aula-helm.zip
cd 01\ primeiro\ helm\ chart
helm create api-produto
helm install minhaapi ./api-produto --dry-run --debug
helm install minhaapi ./api-produto --dry-run --debug &gt; teste.yaml
helm uninstall meu-ingress-controller -n nginx-ingress
helm install minhaapi api-produto
kubectl describe deployment.apps/minhaapi-api-deployment
kubectl describe replicaset.apps/minhaapi-api-deployment-7b569c588d
kubectl describe pod/minhaapi-api-deployment-7b569c588d-4f7mx
helm uninstall minhaapi
helm install minhaapi api-produto --wait
helm install minhaapi api-produto/ --wait
helm install minhaapi api-produto/
kubectl describe pod/minhaapi-api-deployment-6d4589fbd6-w9pwk
kubectl describe rnetes/20 helm/01 primeiro helm chart on \M- main [?] took 2s \n❯ helm install minhaapi api-produto/
kubectl describe pod/minhaapi-api-deployment-6d4589fbd6-phl88
code Projects/devops-labs/devops-pro/05\ kubernetes/.
cd 20\ helm
cd 01\ primeiro\ helm\ chart/api-produto/templates
cd ..
helm upgrade minhaapi api-produto --dry-run --debug
helm upgrade minhaapi api-produto
kubectl describe pod/minhaapi-api-deployment-56ccdd7b7b-zxxhw
kubectl delete pod/minhaapi-api-deployment-985f89bb7-l8r8h
helm uninstall minhaapi api-produto
kubectl describe pod/minhaapi-api-deployment-56ccdd7b7b-5k669
kubectl delete pod/minhaapi-api-deployment-56ccdd7b7b-5k669
ssh root@104.236.83.141
KUBECTL GET INGRESS
kubectl get namespace
kubectl delete pods --all\n
kubectl proxy | tee /home/carlos/.vscode/extensions/ms-kubernetes-tools.vscode-kubernetes-tools-1.3.13/dist/proxy.out
cd .kube
pwd
d 21\ estrategias\ de\ deploy/01\ recreate
cd 21\ estrategias\ de\ deploy/01\ recreate
kubectl apply -f .
kubectl apply -f deployment.yaml --force
kubectl delete deployment.apps/api-versao
cd 02\ ramped
cd ../03\ blue\ green
kubectl patch service api-versao-service -p '{"spec":{"selector":{"version":"v2"}}}'
cd ../04\ canary
cd ../../22\ traefik
helm repo add traefik https://traefik.github.io/charts
helm show values traefik/traefik
helm show values traefik/traefik &gt; values.yaml
kubectl delete deployment --all
kubectl create namespace traefik-system
helm upgrade --install traefik traefik/traefik --namespace=traefik-system
watch 'kubectl get all -n traefik-system
kubectl apply -f app
watch 'kubectl get all -n traefik-system'
kubectl port-forward service/nginx-service 8080:80
kubectl delete service/nfinx-service
kubectl describe deployment.apps/nginx
kubectl describe pod/nginx-6df875878b-f6l7x
kubectl delete deployment.apps/nginx
kubectl apply -f pod/nginx-cdffcbc8b-xnrs8
kubectl describe pod/nginx-cdffcbc8b-xnrs8
kubectl delete all --all -n curl
kubectl delete all --all -n nginx-ingress
kubectl delete all --all -n ingress-nginx
kubectl delete namespace curl
kubectl delete namespace ingress-nginx
kubectl delete namespace nginx-ingress
kubectl describe pod/nginx-76485b86d6-pj2np
kubectl api-resources
kubectl applt app/ingressroute.yaml
kubectl apply -f app/ingressroute.yaml
kubectl get ingressroute
kubectl describe d
kubectl describe ingressroute
kubectl apply -f app/middleware.yaml
docker container run fortio/fortio load chiarelldev.com
docker container run fortio/fortio load http://chiarelldev.com
kubectl apply -f app/dashboard.yaml
kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.12.0/cert-manager.yaml
watch 'kubectl get all -n cert-manager'
watch 'kubectl get all'\n
cd ../23\ cert-manager
kubectl apply -f app-exemplo.yaml
kubectl apply -f ingress-route.yaml
kubectl get all -n traefik-system
kubectl apply -f issue-homolog.yaml
kubectl get clusterissuer -n cert-manager
kubectl apply -f issue-prod.yaml
kubectl apply -f certificado.yaml
kubectl get certificate
kubectl describe certificate
kubectl describe certificate letsencrypt-chiarellidev-cert
kubectl apply -f ingress-route-tls.yaml
history | grep history